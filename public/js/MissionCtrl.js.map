{"version":3,"sources":["MissionCtrl.js"],"names":[],"mappingsfile":"MissionCtrl.js","sourcesContent":["/**\n * Created by akramkhalifa on 29/08/2016.\n */\n'use strict';\n\n/**\n * @ngdoc function\n * @name demoApp.controller:IndexCtrl\n * @description\n * # IndexCtrl\n * Controller of the demoApp\n */\nhrmApp\n    .controller('MissionCtrl',['MissionService','$http','$mdEditDialog', '$scope','$mdDialog','$timeout','$mdBottomSheet', '$mdToast',\n        function (\n            MissionService,$http,$mdEditDialog, $scope,$mdDialog, $timeout,$mdBottomSheet, $mdToast) {\n\n            $scope.typesContrat = [\"Freelance\", \"CDI\"];\n           /* $scope.selectedTypes;\n            $scope.getselectedTypes = function() {\n                if ($scope.selectedTypes !== undefined) {\n                    return  $scope.selectedTypes;\n                } else {\n                    return \"Type\";\n                }\n            };*/\n            $scope.clients = $http({\n                                method: 'GET',\n                                url: 'http://localhost/hrm/public/api/raisons'\n                                }).success(function (data) {\n                                    $scope.clients = data;\n                                }).error(function (data) {\n                                    console.log(data);\n                                });\n\n            $scope.selectedClients;\n            $scope.getselectedClients = function() {\n                if ($scope.selectedClients !== undefined) {\n                    return  $scope.selectedClients;\n                } else {\n                    return \"Client\";\n                }\n            };\n            $scope.consultants =  $http({\n                                        method: 'GET',\n                                        url: 'http://localhost/hrm/public/api/getConsultants'\n                                    }).success(function (data) {\n                                        $scope.consultants = data;\n                                    }).error(function (data) {\n                                        console.log(data);\n                                    });\n            $scope.selectedConsultants;\n            $scope.getselectedConsultants = function() {\n                if ($scope.selectedConsultants !== undefined) {\n                    return  $scope.selectedConsultants;\n                } else {\n                    return \"Consultant\";\n                }\n            };\n\n            $scope.id = null;\n            $scope.missions = [];\n\n            $scope.selected = [];\n            $scope.limitOptions = [5, 10, 15, {\n                label: 'All',\n                value: function () {\n                    return $scope.missions ? $scope.missions.count : 0;\n                }\n            }];\n\n            $scope.options = {\n                rowSelection: true,\n                multiSelect: true,\n                autoSelect: true,\n                decapitate: false,\n                largeEditDialog: false,\n                boundaryLinks: false,\n                limitSelect: true,\n                pageSelect: true\n            };\n\n            $scope.query = {\n                order: 'raison',\n                limit: 5,\n                page: 1\n            };\n\n\n            $scope.init = function () {\n                MissionService.getMissions().$promise.then(function (data) {\n                    $scope.missions = {\n                        \"count\":data.length,\n                        \"data\":data\n                    };\n                });\n            };\n\n\n            $scope.deselect = function (item) {\n                console.log(item.id,'was deselected');\n            };\n\n            $scope.log = function (item) {\n                console.log(item.id,'was selected');\n                $scope.id = item.id;\n            };\n\n            $scope.loadStuff = function () {\n                $scope.promise = $timeout(function () {\n\n                }, 2000);\n            };\n\n            $scope.toggleLimitOptions = function () {\n                $scope.limitOptions = $scope.limitOptions ? undefined : [5, 10, 15];\n            };\n\n            $scope.loadStuff = function () {\n                $scope.promise = $timeout(function () {\n                    // loading\n                }, 2000);\n            };\n\n            $scope.logPagination = function (page, limit) {\n                console.log('page: ', page);\n                console.log('limit: ', limit);\n            };\n\n            $scope.mission = {};\n\n            $scope.addMission = function (event) {\n                $mdDialog.show({\n                    controller: AddConsultantController,\n                    locals: {\n                        items: $scope.missions\n                    },\n                    parent: angular.element(document.body),\n                    templateUrl: 'views/mission/addmission.html',\n                    controllerAs: 'ctrl',\n                    clickOutsideToClose:true,\n                    targetEvent: event\n                }).then(function (add) {\n                    $scope.init();\n                    $mdToast.show(\n                        $mdToast.simple()\n                            .textContent(\"Mission ajouté avec succès\")\n                            .position('top right')\n                            .hideDelay(1500)\n                    );\n\n                }, function(cancel) {\n                });\n            };\n\n            $scope.showMission = function (event) {\n                $mdDialog.show({\n                    locals: {\n                        id: $scope.id\n                    },\n                    controller: function ($mdDialog,$scope,id) {\n                        MissionService.get({id: id}).$promise.then(function (data) {\n                            console.log(data);\n                            $scope.datas = data;\n                        });\n                        $scope.hide = function () {\n                            $mdDialog.hide();\n                        };\n                        $scope.cancel = function () {\n                            $mdDialog.cancel();\n                        };\n                    },\n                    parent: angular.element(document.body),\n                    templateUrl: 'views/mission/seemission.html',\n                    clickOutsideToClose:true,\n                    targetEvent: event\n                });\n            };\n\n            $scope.editMission = function (event) {\n                $mdDialog.show({\n                    controller: EditMissionController,\n                    parent: angular.element(document.body),\n                    templateUrl: 'views/mission/editmission.html',\n                    locals: {\n                        items: $scope.missions,id: $scope.id\n                    },\n                    clickOutsideToClose:true,\n                    targetEvent: event\n                }).then(function (edit) {\n                    $scope.init();\n                    /* $mdToast.show(\n                     $mdToast.simple()\n                     .textContent(\"Consultant modifié avec succès\")\n                     .position('top right')\n                     .hideDelay(1500)\n                     );*/\n\n                }, function(cancel) {\n                });\n            };\n\n            function AddConsultantController($scope, $mdDialog,items) {\n                $scope.hide = function () {\n                    $mdDialog.hide();\n                };\n                $scope.cancel = function () {\n                    $mdDialog.cancel();\n                };\n                $scope.add = function (mission) {\n                    $scope.errMessage = '';\n                    //  var curDate = new Date();\n\n                    if(new Date(mission.date_debut) > new Date(mission.date_fin)){\n                        $scope.errMessage = 'Date de fin doit être supérieure à la date de début';\n                        return false;\n                    }\n\n                    if(mission.titre != null && mission.client !=null && mission.consultant != null && mission.type_contrat != null) {\n                        mission = {\n                            titre: mission.titre,\n                            date_debut: mission.date_debut || \" \",\n                            date_fin: mission.date_fin || \" \",\n                            tjm: mission.tjm || \" \",\n                            prix_vente: mission.prix_vente || \" \",\n                            assurance: mission.assurance || \" \",\n                            charges_sociales: mission.charges_sociales || \" \",\n                            ref_contrat: mission.ref_contrat || \" \",\n                            delai_paiement: mission.delai_paiement || \" \",\n                            type_contrat: mission.type_contrat,\n                            salaire : mission.salaire || \" \",\n                            cli_id: mission.client,\n                            nom : mission.consultant\n                        };\n\n\n\n                        MissionService.saveMission(mission).$promise.then(\n                            function(value) {\n                                items.push(value);\n                            },function (data) {\n                                console.log(data);\n                            });\n                        $mdDialog.hide(mission);\n                    }\n                    else {\n                        console.log('what');\n                    }\n\n                };\n            };\n\n            function EditMissionController($scope, $mdDialog,items,id) {\n                $scope.hide = function () {\n                    $mdDialog.hide();\n                };\n                $scope.cancel = function () {\n                    $mdDialog.cancel();\n                };\n\n                MissionService.get({id: id}).$promise.then(function (data) {\n                    console.log(data);\n                    $scope.datas = data;\n                });\n\n                $scope.edit = function (mission) {\n                    mission = {\n                        titre: mission.titre,\n                        date_debut: mission.date_debut,\n                        date_fin: mission.date_fin,\n                        tjm: mission.tjm,\n                        prix_vente: mission.prix_vente,\n                        assurance: mission.assurance,\n                        charges_sociales: mission.charges_sociales,\n                        ref_contrat: mission.ref_contrat,\n                        delai_paiement: mission.delai_paiement,\n                        type_contrat: mission.type_contrat,\n                        salaire : mission.salaire,\n                        cli_id: mission.client,\n                        nom : mission.consultant\n                    };\n                    MissionService.editMission({id: id},mission);\n                    $mdDialog.hide(mission);\n                }\n            }\n\n            $scope.showConfirm = function(ev) {\n                var confirm = $mdDialog.confirm()\n                    .title('Vous voulez vraiment supprimer?')\n                    .textContent('')\n                    .targetEvent(ev)\n                    .ok('Effacer')\n                    .cancel('Annuler');\n                $mdDialog.show(confirm).then(function() {\n                    var index =  $scope.missions[\"data\"].indexOf(\n                        $scope.missions[\"data\"].find(function(e) {\n                            return e.id == $scope.id;\n                        }));\n\n                    MissionService.deleteMission({id: $scope.id}).$promise.then(function (success) {\n                        $scope.missions[\"data\"].splice(index,1);\n                    });\n\n                    $mdToast.show(\n                        $mdToast.simple()\n                            .textContent(\"Mission a été supprimé\")\n                            .position('top right')\n                            .hideDelay(1500)\n                    );\n                }, function() {\n                });\n            };\n            $scope.init();\n\n            $scope.serachMission = function (mission) {\n                console.log(mission);\n                $http({\n                    method: 'POST',\n                    url: 'http://localhost/hrm/public/api/serachMission',\n                    data:  {date_debut: mission.date_debut, date_fin: mission.date_fin,cli_id: mission.client,nom:mission.consultant}\n                }).success(function (data) {\n                    if(data !='Mission Not Found'){\n                        $scope.missions[\"data\"] = [];\n                        $scope.missions[\"data\"].push(data);\n                    }\n                   else {\n                       $scope.init();\n                    }\n                }).error(function (data) {\n                    console.log(data);\n                });\n                mission.date_debut = \"\";\n                mission.date_fin = \"\";\n                mission.client = \"\";\n                mission.consultant = \"\";\n            };\n\n        }\n    ]);\n\n"],"sourceRoot":"/source/"}