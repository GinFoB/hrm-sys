{"version":3,"sources":["authService.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"authService.js","sourcesContent":["/**\n * Created by akramkhalifa on 07/09/2016.\n */\n'use strict';\nhrmApp\n    .factory('Auth', ['$http', '$localStorage', function ($http, $localStorage) {\n    function urlBase64Decode(str) {\n\n        var output = str.replace('-', '+').replace('_', '/');\n        switch (output.length % 4) {\n            case 0:\n                break;\n            case 2:\n                output += '==';\n                break;\n            case 3:\n                output += '=';\n                break;\n            default:\n                throw 'Illegal base64url string!';\n        }\n        return window.atob(output);\n    }\n\n    function getClaimsFromToken() {\n        var token = $localStorage.token;\n        var user = {};\n        if (typeof token !== 'undefined') {\n            var encoded = token.split('.')[1];\n            user = JSON.parse(urlBase64Decode(encoded));\n        }\n        return user;\n    }\n\n    var tokenClaims = getClaimsFromToken();\n\n    return {\n        signup: function (data, success, error) {\n            $http.post('/signup', data).success(success).error(error)\n        },\n        signin: function (data, success, error) {\n            $http.post('http://localhost/hrm/public/authenticate', data).then(function(response) {\n\n                    // Stringify the returned data to prepare it\n                    // to go into local storage\n                    var user = JSON.stringify(response.data.user);\n\n                    // Set the stringified user data into local storage\n                    localStorage.setItem('user', user);\n\n                console.log(user);\n\n                    // The user's authenticated state gets flipped to\n                    // true so we can now show parts of the UI that rely\n                    // on the user being logged in\n                   /* $rootScope.authenticated = true;\n\n                    // Putting the user's data on $rootScope allows\n                    // us to access it anywhere across the app\n                    $rootScope.currentUser = response.data.user;*/\n\n                    // Everything worked out so we can now redirect to\n                    // the users state to view the data\n                    //$state.go('users');\n            });\n        },\n        logout: function (success) {\n            tokenClaims = {};\n            delete $localStorage.token;\n            success();\n        },\n        getTokenClaims: function () {\n            return tokenClaims;\n        }\n    };\n}\n]);"],"sourceRoot":"/source/"}